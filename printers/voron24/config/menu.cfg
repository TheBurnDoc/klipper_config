# Main
#   + Tune
#       + Speed: 000%
#       + Flow: 000%
#       + Offset Z:00.00
#   + Print Jobs
#       + Start printing
#       + Resume printing
#       + Pause printing
#       + Cancel printing
#       + ... (files)
#   + Control
#       + Initialize
#       + Home 
#           + Home all
#           + Home X/Y
#           + Home Z
#       + Level gantry
#       + Disable steppers
#       + Fans
#            + Part fan: OFF
#            + Part fan speed: 000%
#            + Exhaust fan: OFF
#            + Exhaust fan speed: 000%
#       + Move 10mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#       + Move 1mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#       + Move 0.1mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#   + Temperature
#       + Extruder:000 (0000)
#       + Bed:000 (0000)
#       + Preheat PLA
#           + Preheat all
#           + Preheat hotend
#           + Preheat hotbed
#       + Preheat ABS
#           + Preheat all
#           + Preheat hotend
#           + Preheat hotbed
#       + Cooldown
#           + Cooldown all
#           + Cooldown hotend
#           + Cooldown hotbed
#   + Filament
#       + Ex0:000 (0000)
#       + Load Fil. fast
#       + Load Fil. slow
#       + Unload Fil.fast
#       + Unload Fil.slow
#       + Feed: 000.0
#   + Setup
#       + Save config
#       + Restart
#           + Restart host
#           + Restart FW
#       + PID tuning
#           + Tune Hotend PID
#           + Tune Hotbed PID
#       + Calibration
#           + Bed probe
#       + Dump parameters

[menu __voron_menu]
type: list
name: Voron

### Tune ###
[menu __voron_menu __tune]
type: list
enable: {printer.idle_timeout.state == "Printing"}
name: Tune

### Tune / Speed ###
[menu __voron_menu __tune __speed]
type: input
name: Speed: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.speed_factor}
input_min: 0.01
input_max: 5
input_step: 0.01
realtime: True
gcode:
    M220 S{'%d' % (menu.input*100)}

### Tune / Flow ###
[menu __voron_menu __tune __flow]
type: input
name: Flow: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.extrude_factor}
input_min: 0.01
input_max: 2
input_step: 0.01
realtime: True
gcode:
    M221 S{'%d' % (menu.input*100)}

### Tune / Offset Z ###
[menu __voron_menu __tune __offsetz]
type: input
name: Offset Z:{'%05.3f' % menu.input}
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.005
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1


### Print Jobs ###
[menu __voron_menu __print_jobs]
type: vsdlist
enable: {('virtual_sdcard' in printer)}
name: Print Jobs

### Print Jobs / Start ###
[menu __voron_menu __print_jobs __start]
type: command
enable: {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and not printer.virtual_sdcard.is_active}
name: Start printing
gcode: M24

### Print Jobs / Resume ###
[menu __voron_menu __print_jobs __resume]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "paused"}
name: Resume printing
gcode:
    {% if "pause_resume" in printer %}
        RESUME
    {% else %}
        M24
    {% endif %}

### Print Jobs / Pause ###
[menu __voron_menu __print_jobs __pause]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "printing"}
name: Pause printing
gcode:
    {% if "pause_resume" in printer %}
        PAUSE
    {% else %}
        M25
    {% endif %}

### Print Jobs / Cancel ###
[menu __voron_menu __print_jobs __cancel]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Cancel printing
gcode:
    {% if 'pause_resume' in printer %}
        CANCEL_PRINT
    {% else %}
        M25
        M27
        M26 S0
        TURN_OFF_HEATERS
        {% if printer.toolhead.position.z <= printer.toolhead.axis_maximum.z - 5 %}
            G91
            G0 Z5 F1000
            G90
        {% endif %}
    {% endif %}

### Control ###
[menu __voron_menu __control]
type: list
name: Control

### Control / Initialise ###
[menu __voron_menu __control __init]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Initialize
gcode: G32

### Control / Home

### Control / Home / Home all ###
[menu __voron_menu __control __home __homeall]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home all
gcode: G28

### Control / Home / Home X ###
[menu __voron_menu __control __home __homex]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home X
gcode: G28 X

### Control / Home / Home Y ###
[menu __voron_menu __control __home __homex]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home Y
gcode: G28 Y

### Control / Home Z ###
[menu __voron_menu __control __home __homez]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home Z
gcode: G28 Z

### Control / Level gantry ###
[menu __voron_menu __control __level_gantry]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Level gantry
gcode: QUAD_GANTRY_LEVEL

### Control / Disable steppers ###
[menu __voron_menu __control __disable_steppers]
type: command
name: Steppers off
gcode:
    M84
    M18

### Control / Fans
[menu __voron_menu __control __fans]
type: list
name: Fans

### Control / Fans / Part fan ###
[menu __voron_menu __control __fans __part_fan]
type: input
enable: {'fan' in printer}
name: Part fan: {'ON ' if menu.input else 'OFF'}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 1
gcode:
    M106 S{255 if menu.input else 0}

### Control / Fans / Part fan speed ###
[menu __voron_menu __control __fans __part_fan_speed]
type: input
enable: {'fan' in printer}
name: Part fan speed: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M106 S{'%d' % (menu.input*255)}

### Control / Move 10mm ###
[menu __voron_menu __control __move_10mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 10mm

### Control / Move 10mm / X ###
[menu __voron_menu __control __move_10mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 10mm / Y ###
[menu __voron_menu __control __move_10mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 10 mm / Z ###
[menu __voron_menu __control __move_10mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 10mm / E ###
[menu __voron_menu __control __move_10mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 1mm ###
[menu __voron_menu __control __move_1mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 1mm

### Control / Move 1mm / X ###
[menu __voron_menu __control __move_1mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 1mm / Y ###
[menu __voron_menu __control __move_1mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 1mm / Z ###
[menu __voron_menu __control __move_1mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 1mm / E ###
[menu __voron_menu __control __move_1mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 0.1mm ###
[menu __voron_menu __control __move_01mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 0.1mm

### Control / Move 0.1mm / X ###
[menu __voron_menu __control __move_01mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 0.1mm / Y ###
[menu __voron_menu __control __move_01mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 0.1mm / Z ###
[menu __voron_menu __control __move_01mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

### Control / Move 0.1mm / E ###
[menu __voron_menu __control __move_01mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu temperature ###
[menu __voron_menu __temp]
type: list
name: Temperature

[menu __voron_menu __temp __hotend0_target]
type: input
enable: {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

[menu __voron_menu __temp __hotend1_target]
type: input
enable: {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name: {"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
input: {printer.extruder1.target}
input_min: 0
input_max: {printer.configfile.config.extruder1.max_temp}
input_step: 1
gcode: M104 T1 S{'%.0f' % menu.input}

[menu __voron_menu __temp __hotbed_target]
type: input
enable: {'heater_bed' in printer}
name: {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input: {printer.heater_bed.target}
input_min: 0
input_max: {printer.configfile.config.heater_bed.max_temp}
input_step: 1
gcode: M140 S{'%.0f' % menu.input}

[menu __voron_menu __temp __preheat_pla]
type: list
name: Preheat PLA

[menu __voron_menu __temp __preheat_pla __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S60
    M104 S200

[menu __voron_menu __temp __preheat_pla __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S200

[menu __voron_menu __temp __preheat_pla __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S60

[menu __voron_menu __temp __preheat_abs]
type: list
name: Preheat ABS

[menu __voron_menu __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S110
    M104 S245

[menu __voron_menu __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S245

[menu __voron_menu __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S110

[menu __voron_menu __temp __cooldown]
type: list
name: Cooldown

[menu __voron_menu __temp __cooldown __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Cooldown all
gcode:
    M104 S0
    M140 S0

[menu __voron_menu __temp __cooldown __hotend]
type: command
enable: {'extruder' in printer}
name: Cooldown hotend
gcode: M104 S0

[menu __voron_menu __temp __cooldown __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Cooldown hotbed
gcode: M140 S0

### menu filament ###

[menu __voron_menu __filament]
type: list
name: Filament

[menu __voron_menu __filament __hotend0_target]
type: input
enable: {'extruder' in printer}
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

[menu __voron_menu __filament __loadf]
type: command
name: Load Fil. fast
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E50 F960
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __voron_menu __filament __loads]
type: command
name: Load Fil. slow
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E50 F240
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __voron_menu __filament __unloadf]
type: command
name: Unload Fil.fast
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E-50 F960
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __voron_menu __filament __unloads]
type: command
name: Unload Fil.slow
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E-50 F240
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __voron_menu __filament __feed]
type: input
name: Feed: {'%.1f' % menu.input}
input: 5
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E{'%.1f' % menu.input} F60
    RESTORE_GCODE_STATE NAME=__filament__load

### menu setup ###
[menu __voron_menu __setup]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Setup

[menu __voron_menu __setup __save_config]
type: command
name: Save config
gcode: SAVE_CONFIG

[menu __voron_menu __setup __restart]
type: list
name: Restart

[menu __voron_menu __setup __restart __host_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart host
gcode: RESTART

[menu __voron_menu __setup __restart __firmware_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart FW
gcode: FIRMWARE_RESTART

[menu __voron_menu __setup __shutdown]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Shut down
gcode: POWER_OFF

[menu __voron_menu __setup __tuning]
type: list
name: PID tuning

[menu __voron_menu __setup __tuning __hotend_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name: Tune Hotend PID
gcode: PID_CALIBRATE HEATER=extruder TARGET=210 WRITE_FILE=1

[menu __voron_menu __setup __tuning __hotbed_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name: Tune Hotbed PID
gcode: PID_CALIBRATE HEATER=heater_bed TARGET=60 WRITE_FILE=1

[menu __voron_menu __setup __dump]
type: command
name: Dump parameters
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s"
                               % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}